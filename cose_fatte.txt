- Cambiato le estensioni dei file per generare le istanze dei dati, rinominandole in .sh, da linux a windows per essere eseguite.

- Risolto problema di lettura file da CRLF -> LF, altrimenti non legge e non istanzia i container

- Modifica dei comandi per le query, altrimenti non funzionano.
Esempio: java -jar obda-mixer.jar --conf=configuration-sc1.conf | Out-File -FilePath ./results/mixer-out-pippo.txt
Abbiamo ricostruito dei file di configurazione che mancavano all'interno della repo.
Abbiamo anche cambiato gli indirizzi nei file di ocnfig.

- 02/08/2023

Modifica dei path all'interno del file docker_compose per poter istanziare tutti i contenitori all'interno di docker, in questo modo possiamo eseguire tutti i test contemporaneamente.

04-08-2023

Abbiamo modificato gli indirizzi delle porte, in quanto homogeneo ed eterogeneo, nei file di configurazione erano gli stessi e andava in errore.
Sono stati creati due file di configurazione che mancavano e senza i quali non potevamo fare le query


- 30-08-2023

Domanda: l'ottimizzazione che propongono lavora a livello del modulo obdf system o a livello di data federated ?
        Il meccanismo di riscrittura è chiaro ?
        I risultati prodotti sono analoghi a quelli precedenti

Aggiornamento del 05-09-2023

Sono state modificate delle porte anche nel docker compose.
Abbiamo creato uno script con comandi shel per eseguire tutte le query su tutti i profili.
Abbiamo creato uno script che converte in automatico tutti i risultati in csv, così che possano essere utilizzati per fare i grafici in python.
Per far partire gli ontop abbiamo dovuto modificare dei path per l'environment.
Per dataset più grandi dobbiamo aumentare l'heap.
Le query scritte in sparql vengono tradotte nel terminale del container in sql, da lì devono essere spostate e tradotte.
