version: '3.4'
services:

  source-s1:
    image: postgres:14-alpine
    container_name: '${COMPOSE_PROJECT_NAME:-obdf}-source-s1'
    restart: unless-stopped
    profiles:
      - source-s1
      - hom
      - het
    ports:
      - '${PORT_S1:-10000}:5432'
    volumes:
      - ./sources/s1:/docker-entrypoint-initdb.d
      - ./data/${SCALE}:/data
      - data-source-s1:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: 's1'
      POSTGRES_USER: '${USERID}'
      POSTGRES_PASSWORD: '${USERPWD}'
    shm_size: 1g

  source-s2:
    image: mysql:8.0.28-debian
    container_name: '${COMPOSE_PROJECT_NAME:-obdf}-source-s2'
    restart: unless-stopped
    profiles:
      - source-s2
      - hom
    ports:
      - '${PORT_S2:-10002}:3306'
    volumes:
      - ./sources/s2:/docker-entrypoint-initdb.d
      - ./data/${SCALE}:/data
      - data-source-s2:/var/lib/mysql
    environment:
      MYSQL_DATABASE: 's2'
      MYSQL_USER: '${USERID}'
      MYSQL_PASSWORD: '${USERPWD}'
      MYSQL_ROOT_PASSWORD: '${USERPWD}'
    shm_size: 1g

  source-s3:
    image: luizcarlosfaria/mssql-server-linux:2019-latest
    container_name: '${COMPOSE_PROJECT_NAME:-obdf}-source-s3'
    restart: unless-stopped
    profiles:
      - source-s3
      - hom
      - het
    ports:
      - '${PORT_S3:-10003}:1433'
    volumes:
      - ./sources/s3:/docker-entrypoint-initdb.d
      - ./data/${SCALE}:/data
      - data-source-s3:/var/opt/mssql/data
    environment:
      ACCEPT_EULA: 'Y'
      MSSQL_PID: 'Developer'
      MSSQL_DATABASE: 's3'
      MSSQL_USER: '${USERID}'
      MSSQL_PASSWORD: '${USERPWD}'
      SA_PASSWORD: '${USERPWD}'
    shm_size: 1g

  source-s4:
    image: ibmcom/db2:11.5.7.0
    container_name: '${COMPOSE_PROJECT_NAME:-obdf}-source-s4'
    restart: unless-stopped
    profiles:
      - source-s4
      - hom
    ports:
      - '${PORT_S4:-10004}:50000'
    volumes:
      - ./sources/s4:/docker-entrypoint-initdb.d
      - ./sources/s4/bootstrap:/var/custom
      - ./data/${SCALE}:/data
      - data-source-s4:/database
      - data-source-s4-sync:/sync
    privileged: true
    environment:
      LICENSE: 'accept'
      DB2INSTANCE: 'db2inst1'
      DB2INST1_PASSWORD: '${USERPWD}'
    shm_size: 1g

  source-s5:
    image: luizcarlosfaria/mssql-server-linux:2019-latest
    container_name: '${COMPOSE_PROJECT_NAME:-obdf}-source-s5'
    restart: unless-stopped
    profiles:
      - source-s5
      - hom
    ports:
      - '${PORT_S5:-10005}:1433'
    volumes:
      - ./sources/s5:/docker-entrypoint-initdb.d
      - ./data/${SCALE}:/data
      - data-source-s5:/var/opt/mssql/data
    environment:
      ACCEPT_EULA: 'Y'
      MSSQL_PID: 'Developer'
      MSSQL_DATABASE: 's5'
      MSSQL_USER: '${USERID}'
      MSSQL_PASSWORD: '${USERPWD}'
      SA_PASSWORD: '${USERPWD}'
    shm_size: 1g

  source-s2p:
    image: mongo:4.4.13
    container_name: '${COMPOSE_PROJECT_NAME:-obdf}-source-s2p'
    restart: unless-stopped
    profiles:
      - source-s2p
      - het
    ports:
      - '${PORT_S2P:-10012}:27017'
    volumes:
      - ./sources/s2p:/docker-entrypoint-initdb.d
      - ./data/${SCALE}:/import
      - data-source-s2p-db:/data/db
      - data-source-s2p-configdb:/data/configdb
    environment:
      MONGO_INITDB_DATABASE: 's2p'
      MONGO_INITDB_ROOT_USERNAME: '${USERID}'
      MONGO_INITDB_ROOT_PASSWORD: '${USERPWD}'
    shm_size: 1g

  source-sc1:
    image: postgres:14-alpine
    container_name: '${COMPOSE_PROJECT_NAME:-obdf}-source-sc1'
    restart: unless-stopped
    ports:
      - '${PORT_SC1:-10007}:5432'
    volumes:
      - ./sources/sc1:/docker-entrypoint-initdb.d
      - ./data/${SCALE}:/data
      - data-source-sc1:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: 'sc1'
      POSTGRES_USER: '${USERID}'
      POSTGRES_PASSWORD: '${USERPWD}'
    shm_size: 1g

  source-sc2:
    image: postgres:14-alpine
    container_name: '${COMPOSE_PROJECT_NAME:-obdf}-source-sc2'
    restart: unless-stopped
    profiles:
      - sc2
      - centralization
    ports:
      - '${PORT_SC2:-10008}:5432'
    volumes:
      - ./sources/sc2:/docker-entrypoint-initdb.d
      - ./data/${SCALE}:/data
      - data-source-sc2:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: 'sc2'
      POSTGRES_USER: '${USERID}'
      POSTGRES_PASSWORD: '${USERPWD}'
    shm_size: 1g

  source-smatv:
    image: postgres:14-alpine
    container_name: '${COMPOSE_PROJECT_NAME:-obdf}-source-smatv'
    restart: unless-stopped
    profiles:
      - source-smatv
      - hom
      - het
    ports:
      - '${PORT_SMATV:-10009}:5432'
    volumes:
      - ./sources/smatv:/docker-entrypoint-initdb.d
      - ./data/${SCALE}:/data
      - data-source-smatv:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: 'smatv'
      POSTGRES_USER: '${USERID}'
      POSTGRES_PASSWORD: '${USERPWD}'
    shm_size: 1g

  teiid-het:
    build: ./teiid
    container_name: '${COMPOSE_PROJECT_NAME:-obdf}-teiid-het'
    restart: unless-stopped
    profiles:
      - het
    ports:
    - '${PORT_TEIID_HET_JDBC:-11000}:31000'
    - '${PORT_TEIID_HET_PSQL:-11001}:35432'
    - '${PORT_TEIID_HET_HTTP:-11002}:8080'
    - '${PORT_TEIID_HET_ADMIN:-11003}:9990'
    volumes:
    - ./data/${SCALE}:/data
    - ./teiid/het:/docker-entrypoint-initdb.d
    - ./teiid/resources:/resources
    - data-teiid-het-standalone:/opt/jboss/wildfly/standalone
    - data-teiid-het-domain:/opt/jboss/wildfly/domain
    environment:
      USERID: '${USERID}'
      USERPWD: '${USERPWD}'
      TEIID_ADMIN_USERNAME: '${USERID}'
      TEIID_ADMIN_PASSWORD: '${USERPWD}'
      TEIID_APP_USERNAME: '${USERID}'
      TEIID_APP_PASSWORD: '${USERPWD}'
      TEIID_LOG_SOURCE_QUERIES: '${TEIID_LOG_SOURCE_QUERIES:-0}'
      JAVA_OPTS:  '-Xmx${TEIID_HEAP_SIZE}'
    shm_size: 1g
    depends_on:
    - source-s1
    - source-s2p
    - source-s3
    entrypoint: [
      '/resources/wait-for-it.sh', 'source-s1:5432',   '--timeout=0', '--strict', '--',
      '/resources/wait-for-it.sh', 'source-s2p:27017', '--timeout=0', '--strict', '--',
      '/resources/wait-for-it.sh', 'source-s3:1433',   '--timeout=0', '--strict', '--',
      '/entrypoint.sh' ]

  teiid-hom:
    build: ./teiid
    container_name: '${COMPOSE_PROJECT_NAME:-obdf}-teiid-hom'
    restart: unless-stopped
    profiles:
      - hom
      - test
    ports:
      - '${PORT_TEIID_HOM_JDBC:-12000}:31000'
      - '${PORT_TEIID_HOM_PSQL:-12001}:35432'
      - '${PORT_TEIID_HOM_HTTP:-12002}:8080'
      - '${PORT_TEIID_HOM_ADMIN:-12003}:9990'
    volumes:
      - ./data/${SCALE}:/data
      - ./teiid/hom:/docker-entrypoint-initdb.d
      - ./teiid/resources:/resources
      - data-teiid-hom-standalone:/opt/jboss/wildfly/standalone
      - data-teiid-hom-domain:/opt/jboss/wildfly/domain
      - data-source-s4-sync:/sync
    environment:
      USERID: '${USERID}'
      USERPWD: '${USERPWD}'
      TEIID_ADMIN_USERNAME: '${USERID}'
      TEIID_ADMIN_PASSWORD: '${USERPWD}'
      TEIID_APP_USERNAME: '${USERID}'
      TEIID_APP_PASSWORD: '${USERPWD}'
      TEIID_LOG_SOURCE_QUERIES: '${TEIID_LOG_SOURCE_QUERIES:-0}'
      JAVA_OPTS:  '-Xmx${TEIID_HEAP_SIZE}'
    shm_size: 1g
    depends_on:
    - source-s1
    - source-s2
    - source-s3
    - source-s4
    - source-s5
    entrypoint: [
      '/resources/wait-for-file.sh', '/sync/source-s4',
      '/resources/wait-for-it.sh', 'source-s1:5432',  '--timeout=0', '--strict', '--',
      '/resources/wait-for-it.sh', 'source-s2:3306',  '--timeout=0', '--strict', '--',
      '/resources/wait-for-it.sh', 'source-s3:1433',  '--timeout=0', '--strict', '--',
      '/resources/wait-for-it.sh', 'source-s4:50000', '--timeout=0', '--strict', '--',
      '/resources/wait-for-it.sh', 'source-s5:1433',  '--timeout=0', '--strict', '--',
      '/entrypoint.sh']

  ontop-het:
    image: ontop/ontop-endpoint:4.2
    container_name: '${COMPOSE_PROJECT_NAME:-obdf}-ontop-het'
    restart: unless-stopped
    profiles:
      - ontop-het
    environment:
      ONTOP_ONTOLOGY_FILE: /opt/ontop/input/vkg.owl
      ONTOP_MAPPING_FILE: /opt/ontop/input/het/vkg.obda
      ONTOP_PROPERTIES_FILE: /opt/ontop/input/het/vkg.docker.properties
      ONTOP_PORTAL_FILE: /opt/ontop/input/vkg.toml
      ONTOP_DB_USER: '${USERID}'
      ONTOP_DB_PASSWORD: '${USERPWD}'
      ONTOP_CORS_ALLOWED_ORIGINS: '*'
      ONTOP_DEV_MODE: '${ONTOP_DEV_MODE:-true}'
    ports:
    - '${ONTOP_PORT:-13000}:8080'
    volumes:
    - ./ontop:/opt/ontop/input
    - ./ontop/resources:/opt/ontop/jdbc
    - data-ontop-het:/tmp
    depends_on:
    - teiid-het
    entrypoint: [
      '/opt/ontop/jdbc/wait-for-it.sh', 'teiid-het:31000', '--timeout=0', '--strict', '--',
      '/opt/ontop/entrypoint.sh' ]

  ontop-hom:
    image: ontop/ontop-endpoint:4.2
    container_name: '${COMPOSE_PROJECT_NAME:-obdf}-ontop-hom'
    restart: unless-stopped
    profiles:
      - ontop-hom
    environment:
      ONTOP_ONTOLOGY_FILE: /opt/ontop/input/vkg.owl
      ONTOP_MAPPING_FILE: /opt/ontop/input/hom/vkg.obda
      ONTOP_PROPERTIES_FILE: /opt/ontop/input/hom/vkg.docker.properties
      ONTOP_PORTAL_FILE: /opt/ontop/input/vkg.toml
      ONTOP_DB_USER: '${USERID}'
      ONTOP_DB_PASSWORD: '${USERPWD}'
      ONTOP_CORS_ALLOWED_ORIGINS: '*'
      ONTOP_DEV_MODE: '${ONTOP_DEV_MODE:-true}'
    ports:
    - '${ONTOP_PORT:-13001}:8080'
    volumes:
    - ./ontop:/opt/ontop/input
    - ./ontop/resources:/opt/ontop/jdbc
    - data-ontop-hom:/tmp
    depends_on:
    - teiid-hom
    entrypoint: [
      '/opt/ontop/jdbc/wait-for-it.sh', 'teiid-hom:31000', '--timeout=0', '--strict', '--',
      '/opt/ontop/entrypoint.sh' ]

  ontop-sc1:
    image: ontop/ontop-endpoint:4.2
    container_name: '${COMPOSE_PROJECT_NAME:-obdf}-ontop-sc1'
    restart: unless-stopped
    profiles:
      - ontop-sc1
    environment:
      ONTOP_ONTOLOGY_FILE: /opt/ontop/input/vkg.owl
      ONTOP_MAPPING_FILE: /opt/ontop/input/sc1/vkg.obda
      ONTOP_PROPERTIES_FILE: /opt/ontop/input/sc1/vkg.docker.properties
      ONTOP_PORTAL_FILE: /opt/ontop/input/vkg.toml
      ONTOP_DB_USER: '${USERID}'
      ONTOP_DB_PASSWORD: '${USERPWD}'
      ONTOP_CORS_ALLOWED_ORIGINS: '*'
      ONTOP_DEV_MODE: '${ONTOP_DEV_MODE:-true}'
    ports:
    - '${ONTOP_PORT:-13002}:8080'
    volumes:
    - ./ontop:/opt/ontop/input
    - ./ontop/resources:/opt/ontop/jdbc
    - data-ontop-sc1:/tmp
    depends_on:
    - source-sc1
    entrypoint: [
      '/opt/ontop/jdbc/wait-for-it.sh', 'source-sc1:5432', '--timeout=0', '--strict', '--',
      '/opt/ontop/entrypoint.sh' ]

  ontop-sc2:
    image: ontop/ontop-endpoint:4.2
    container_name: '${COMPOSE_PROJECT_NAME:-obdf}-ontop-sc2'
    restart: unless-stopped
    profiles:
      - ontop-sc2
    environment:
      ONTOP_ONTOLOGY_FILE: /opt/ontop/input/vkg.owl
      ONTOP_MAPPING_FILE: /opt/ontop/input/sc2/vkg.obda
      ONTOP_PROPERTIES_FILE: /opt/ontop/input/sc2/vkg.docker.properties
      ONTOP_PORTAL_FILE: /opt/ontop/input/vkg.toml
      ONTOP_DB_USER: '${USERID}'
      ONTOP_DB_PASSWORD: '${USERPWD}'
      ONTOP_CORS_ALLOWED_ORIGINS: '*'
      ONTOP_DEV_MODE: '${ONTOP_DEV_MODE:-true}'
    ports:
    - '${ONTOP_PORT:-13003}:8080'
    volumes:
    - ./ontop:/opt/ontop/input
    - ./ontop/resources:/opt/ontop/jdbc
    - data-ontop-sc2:/tmp
    depends_on:
    - source-sc2
    entrypoint: [
      '/opt/ontop/jdbc/wait-for-it.sh', 'source-sc2:5432', '--timeout=0', '--strict', '--',
      '/opt/ontop/entrypoint.sh' ]

volumes:
  data-source-s1:
  data-source-s2:
  data-source-s3:
  data-source-s4:
  data-source-s4-sync:
  data-source-s5:
  data-source-s2p-db:
  data-source-s2p-configdb:
  data-source-sc1:
  data-source-sc2:
  data-source-smatv:
  data-teiid-het-standalone:
  data-teiid-het-domain:
  data-teiid-hom-standalone:
  data-teiid-hom-domain:
  data-ontop-het:
  data-ontop-hom:
  data-ontop-sc1:
  data-ontop-sc2:
